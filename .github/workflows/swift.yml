name: Swift

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-10.15
    strategy:
      matrix:
        include:
        - scheme: "macOS"
          sdk: "macosx11.1"
          destination: "platform=macOS,arch=x86_64"
          swift_version: "5.3"
          action: "test"
          pod_lint: "YES"
        - scheme: "iOS"
          sdk: "iphonesimulator"
          destination: "platform=iOS Simulator,OS=14.3,name=iPhone 11"
          swift_version: "5.3"
          action: "test"
          pod_lint: "NO"
        - scheme: "tvOS"
          sdk: "appletvsimulator"
          destination: "platform=tvOS Simulator,OS=14.3,name=Apple TV 4K"
          swift_version: "5.3"
          action: "test"
          pod_lint: "NO"
        - scheme: "watchOS"
          sdk: "watchsimulator"
          destination: "platform=watchOS Simulator,OS=7.2,name=Apple Watch Series 6 - 44mm"
          swift_version: "5.3"
          action: "build"
          pod_lint: "NO"

    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      FRAMEWORK_NAME: "ReSwift-Thunk"       
       
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: carthage-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
              ${{ runner.os }}-carthage-
    - name: Show the currently detailed version of Xcode for CLI
      run: xcode-select -p
    - name: Show Build Settings
      run: xcodebuild -project ${{ env.FRAMEWORK_NAME }}.xcodeproj -scheme '${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}' -showBuildSettings
    - name: Show Build SDK
      run: xcodebuild -project ${{ env.FRAMEWORK_NAME }}.xcodeproj -scheme '${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}' -showsdks
    - name: Show Available Destinations
      run: xcodebuild -project ${{ env.FRAMEWORK_NAME }}.xcodeproj -scheme '${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}' -showdestinations
    - name: Install Carthage Dependencies
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: carthage bootstrap --platform "${{ matrix.scheme }}" --use-xcframeworks --verbose
    - name: Build and Test
      run: |
        xcodebuild "${{ matrix.action }}" \
          -project "${{ env.FRAMEWORK_NAME }}.xcodeproj" \
          -scheme "${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}" \
          -sdk "${{ matrix.sdk }}" \
          -destination "${{ matrix.destination }}" \
          -configuration Debug
    - name: Lint If Needed
      if: matrix.pod_lint == 'YES'
      run: |
        gem install cocoapods -v '1.10.1'
        pod repo update
        ONLY_ACTIVE_ARCH=YES
        GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES
        GCC_GENERATE_TEST_COVERAGE_FILES=YES
        SWIFT_VERSION=${{ matrix.swift_version }}
        pod lib lint --verbose
