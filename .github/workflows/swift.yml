name: Swift

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-10.15
    timeout-minutes: 10
    strategy:
      matrix:
        include:
        - scheme: watchOS
          sdk: watchsimulator
          destination: "platform=watchOS Simulator,OS=7.2,name=Apple Watch Series 6 - 44mm"
          swift_version: "5.3"
          action: build
          pod_lint: "NO"


    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      FRAMEWORK_NAME: "ReSwift-Thunk"       
       
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2
    - name: Select Xcode 12.0.0
      uses: devbotsxyz/xcode-select@v1.1.0
      with:
        version: "12.4.0"
    - name: Show Build Settings
      run: xcodebuild -project ${{ env.FRAMEWORK_NAME }}.xcodeproj -scheme '${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}' -showBuildSettings
    - name: Show Build SDK
      run: xcodebuild -project ${{ env.FRAMEWORK_NAME }}.xcodeproj -scheme '${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}' -showsdks
    - name: Show Available Destinations
      run: xcodebuild -project ${{ env.FRAMEWORK_NAME }}.xcodeproj -scheme '${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}' -showdestinations
    - name: Carthage Bootstrap
      run: carthage bootstrap --no-use-binaries --use-xcframeworks --platform "${{ matrix.scheme }}"
    - name: Build and Test
      if: matrix.action == 'test'
      uses: devbotsxyz/xcode-test@v1.1.0 
      with: 
        project: "${{ env.FRAMEWORK_NAME }}.xcodeproj"
        scheme: "${{ env.FRAMEWORK_NAME }} ${{ matrix.scheme }}"
        sdk: "${{ matrix.sdk }}"
        destination: "${{ matrix.destination }}"
        configuration: Debug
    - name: Lint If Needed
      if: matrix.pod_lint == 'YES'
      run: |
        gem install cocoapods -v '1.10.1'
        pod repo update
        ONLY_ACTIVE_ARCH=YES
        GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES
        GCC_GENERATE_TEST_COVERAGE_FILES=YES
        SWIFT_VERSION=${{ matrix.swift_version }}
        pod lib lint --verbose --allow-warnings
